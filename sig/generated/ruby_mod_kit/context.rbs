# Generated from lib/ruby_mod_kit/context.rb with RBS::Inline

module RubyModKit
  # The class of transpiler context.
  class Context
    @diffs: SortedSet[[ Integer, Integer, Integer ]]

    @mod_data: SortedSet[[ Integer, Integer, Symbol, String ]]

    @script: String

    attr_reader parse_result: Prism::ParseResult

    attr_reader script: String

    OVERLOAD_METHOD_MAP: Hash[Symbol, String]

    # @rbs src: String
    # @rbs previous_error_count: Integer
    # @rbs return: void
    def initialize: (untyped script, ?mod_data: untyped, ?previous_error_count: Integer) -> void

    # @rbs return: Context
    def generate_next: () -> Context

    def resolve: () -> untyped

    def completed?: () -> untyped

    # @rbs return: void
    def correct_and_collect: () -> void

    # @rbs src_offset: Integer
    # @rbs length: Integer
    # @rbs str: String
    # @rbs return: String
    def []=: (Integer src_offset, Integer length, String str) -> String

    # @rbs return: void
    def apply_collected_data: () -> void

    # @rbs src_offset: Integer
    # @rbs return: Integer
    def dst_offset: (Integer src_offset) -> Integer

    # @rbs src_offset: Integer
    # @rbs new_diff: Integer
    # @rbs return: void
    def insert_diff: (Integer src_offset, Integer new_diff) -> void

    # @rbs src_offset: Integer
    # @rbs type: Symbol
    # @rbs modify_script: String
    # @rbs return: void
    def insert_mod_data: (Integer src_offset, Symbol type, String modify_script) -> void
  end
end
